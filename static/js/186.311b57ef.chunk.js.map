{"version":3,"file":"static/js/186.311b57ef.chunk.js","mappings":"sSAAMA,EAAU,4CACVC,EAAW,+BAAjB,SAEeC,EAAW,GAAXA,OAAAA,EAAAA,MAAAA,KAAAA,WAAAA,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA0BC,GAA1B,gGAEyBC,MAAMD,GAF/B,cAEQE,EAFR,gBAGiBA,EAASC,OAH1B,wEAKIC,QAAQC,IAAR,MALJ,gFASO,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,2FACCN,EADD,UACUF,EADV,8BACwCD,GADxC,kBAEEE,EAAWC,IAFb,kEAKA,SAAeO,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,8EACCR,EADD,UACUF,EADV,kBAC4BU,GAD5B,OACiCX,EADjC,qCAEEE,EAAWC,IAFb,kEAKA,SAAeS,EAAtB,+CAAO,OAAP,oBAAO,WAA8BC,GAA9B,8EACCV,EADD,UACUF,EADV,wBACkCD,EADlC,kBACmDa,EADnD,4CAEEX,EAAWC,IAFb,kEAKA,SAAeW,EAAtB,+CAAO,OAAP,oBAAO,WAAuBH,GAAvB,8EACCR,EADD,UACUF,EADV,kBAC4BU,EAD5B,mBACyCX,EADzC,qCAEEE,EAAWC,IAFb,kEAKA,SAAeY,EAAtB,+CAAO,OAAP,oBAAO,WAA0BJ,GAA1B,8EACCR,EADD,UACUF,EADV,kBAC4BU,EAD5B,mBACyCX,EADzC,4CAEEE,EAAWC,IAFb,oE,0HC1BQ,SAASa,IACpB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAsCE,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KAQE,OANFC,EAAAA,EAAAA,YAAU,YACNP,EAAAA,EAAAA,IAAWE,GAASM,MAAK,SAACC,GACxBH,EAAeG,EAAKC,cAErB,CAACR,KAGA,gCACI,SAAC,KAAD,sBACwB,IAAvBG,EAAYM,QACnB,wBACGN,EAAYO,KAAI,YAA8B,IAA3BhB,EAA0B,EAA1BA,GAAIiB,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC9B,OACE,2BACE,oCAAYD,MACZ,uBAAIC,MAFGlB,SAQf","sources":["Utils/ApiService.js","components/Reviews/Reviews.jsx"],"sourcesContent":["const API_KEY = '?api_key=b7df999202e1c3618d01db23ce0076f0';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nasync function ApiService(URL) {\n  try {\n    let responce = await fetch(URL);\n    return await responce.json();\n  } catch (error) {\n    console.log(error);\n  }\n}\n\nexport async function getMovieTrending() {\n  const URL = `${BASE_URL}/trending/movie/day${API_KEY}`;\n  return ApiService(URL);\n}\n\nexport async function getMovieById(id) {\n  const URL = `${BASE_URL}/movie/${id}${API_KEY}&language=en-US`;\n  return ApiService(URL);\n}\n\nexport async function getMovieByName(name) {\n  const URL = `${BASE_URL}/search/movie${API_KEY}&query=${name}&language=en-US&page=1`;\n  return ApiService(URL);\n}\n\nexport async function getCast(id) {\n  const URL = `${BASE_URL}/movie/${id}/credits${API_KEY}&language=en-US`;\n  return ApiService(URL);\n}\n\nexport async function getReviews(id) {\n  const URL = `${BASE_URL}/movie/${id}/reviews${API_KEY}&language=en-US&page=1`;\n  return ApiService(URL);\n}\n","import { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { getReviews } from \"../../Utils/ApiService\";\r\nimport { SubTitle } from \"../../App.styled\";\r\n\r\n\r\nexport default function Reviews() {\r\n    const { movieId } = useParams();\r\n    const [reviewsData, setReviewsData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        getReviews(movieId).then((data) => {\r\n          setReviewsData(data.results);\r\n        });\r\n      }, [movieId]);\r\n\r\n      return (\r\n          <article>\r\n              <SubTitle>Reviews</SubTitle>\r\n              {reviewsData.length !== 0 ? (\r\n        <ul>\r\n          {reviewsData.map(({ id, author, content }) => {\r\n            return (\r\n              <li key={id}>\r\n                <p>Author: {author}</p>\r\n                <p>{content}</p>\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      ) : (\r\n        <p>Reviews not found!</p>\r\n      )}\r\n          </article>\r\n      );\r\n}"],"names":["API_KEY","BASE_URL","ApiService","URL","fetch","responce","json","console","log","getMovieTrending","getMovieById","id","getMovieByName","name","getCast","getReviews","Reviews","movieId","useParams","useState","reviewsData","setReviewsData","useEffect","then","data","results","length","map","author","content"],"sourceRoot":""}